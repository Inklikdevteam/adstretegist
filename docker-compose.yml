version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: adstrategist-db
    environment:
      POSTGRES_DB: adstrategist
      POSTGRES_USER: adstrategist_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password_123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - adstrategist-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U adstrategist_user -d adstrategist"]
      interval: 30s
      timeout: 10s
      retries: 3

  # AdStrategist Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: adstrategist-app
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://adstrategist_user:${DB_PASSWORD:-secure_password_123}@postgres:5432/adstrategist
      
      # Google Ads API (Required)
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_DEVELOPER_TOKEN: ${GOOGLE_DEVELOPER_TOKEN}
      
      # AI Providers (At least one required)
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      PERPLEXITY_API_KEY: ${PERPLEXITY_API_KEY}
      
      # Session Management
      SESSION_SECRET: ${SESSION_SECRET:-your_super_secure_session_secret_here}
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - adstrategist-network
    restart: unless-stopped
    volumes:
      - app_logs:/app/logs

volumes:
  postgres_data:
  app_logs:

networks:
  adstrategist-network:
    driver: bridge